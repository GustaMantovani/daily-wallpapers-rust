name: Release

on:
  push:
    tags:
      - 'v*' # Disparar o pipeline quando uma nova tag for criada

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact: daily-wallpapers-rust-linux.zip
            ext: .sh
          - os: windows-latest
            artifact: daily-wallpapers-rust-windows.zip
            ext: .bat

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - name: Build project
      run: cargo build --release

    - name: Build external dependencies
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          ./scripts/linux/build_wallpaper_changer${{ matrix.ext }}
        else
          .\scripts\windows\build_wallpaper_changer${{ matrix.ext }}
        fi

    - name: Create .dwr directory and move executable
      run: |
        mkdir -p $HOME/.dwr/bin
        mv target/release/daily-wallpapers-rust$([[ "${{ matrix.os }}" == "windows-latest" ]] && echo ".exe" || echo "") $HOME/.dwr/bin

    - name: Create ZIP archive
      run: |
        cd $HOME
        zip -r ${{ matrix.artifact }} .dwr

    - name: Upload ZIP archive
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact }}
        path: $HOME/${{ matrix.artifact }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: daily-wallpapers-rust-linux.zip

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: daily-wallpapers-rust-windows.zip

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ runner.temp }}/_temp/daily-wallpapers-rust-linux.zip
        asset_name: daily-wallpapers-rust-linux.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ runner.temp }}/_temp/daily-wallpapers-rust-windows.zip
        asset_name: daily-wallpapers-rust-windows.zip
        asset_content_type: application/zip
